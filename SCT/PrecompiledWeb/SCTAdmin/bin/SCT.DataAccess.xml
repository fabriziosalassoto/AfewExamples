<?xml version="1.0"?>
<doc>
<assembly>
<name>
SCT.DataAccess
</name>
</assembly>
<members>
<member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdvertiserBinnacle 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Fetch">
	<summary>
 Reads the data of all the AdvertiserBinnacles in the table prgAdvertiserBinnacle and return
 a list of DAClsAdvertiserBinnacles.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacle in the table prgAdvertiserBinnacle and return
 a list of DAClsAdvertiserBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdvertiserBinnacle in the table prgAdvertiserBinnacle and return
 a list of DAClsAdvertiserBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdvertiserBinnacle in the table prgAdvertiserBinnacle and return
 a list of DAClsAdvertiserBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdvertiserBinnacle in the table prgAdvertiserBinnacle and return
 a list of DAClsAdvertiserBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.FetchByUser(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacle in the table prgAdvertiserBinnacle and return
 a list of DAClsAdvertiserBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.GetParametersList(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.GetParametersList(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdvertiserBinnacle and
 return a list of DAClsAdvertiserBinnacles.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Insert(SCT.DataAccess.DAClsprgAdvertiserBinnacle.Struct)">
	<summary>
 Insert a new registry in the table prgAdvertiserBinnacle and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacle to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Update(SCT.DataAccess.DAClsprgAdvertiserBinnacle.Struct)">
	<summary>
 Update a registry in the table prgAdvertiserBinnacle and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacle to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacle.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdvertiserBinnacle and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacle">
	<summary>
 Represents a controller of data for the prgAdvertiserBinnacle table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgSubscriberBinnacleForms 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Fetch">
	<summary>
 Reads the data of all the SubscriberBinnacleForms in the table prgSubscriberBinnacleForms and return
 a list of DAClsSubscriberBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleForm in the table prgSubscriberBinnacleForms and return
 a list of DAClsSubscriberBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Reads the data of all the SubscriberBinnacleForms in the table prgSubscriberBinnacleForms and return
 a list of DAClsSubscriberBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Reads the data of all the SubscriberBinnacleForms in the table prgSubscriberBinnacleForms and return
 a list of DAClsSubscriberBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.FetchByBinnacle(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Reads the data of all the SubscriberBinnacleForms in the table prgSubscriberBinnacleForms and return
 a list of DAClsSubscriberBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.GetFilters(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgSubscriberBinnacleForms and
 return a list of DAClsSubscriberBinnacleForms.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Insert(SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Struct)">
	<summary>
 Insert a new registry in the table prgSubscriberBinnacleForms and return ID
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacleForm to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Update(SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Struct)">
	<summary>
 Update a registry in the table prgSubscriberBinnacleForms and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacleForm to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleForms.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgSubscriberBinnacleForms and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacleForms">
	<summary>
 Represents a controller of data for the prgSubscriberBinnacleForms table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdvertiserBinnacleTables 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Fetch">
	<summary>
 Reads the data of all the AdvertiserBinnacleTables in the table prgAdvertiserBinnacleTables and return
 a list of DAClsAdvertiserBinnacleTables.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleTable in the table prgAdvertiserBinnacleTables and return
 a list of DAClsAdvertiserBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdvertiserBinnacleTable in the table prgAdvertiserBinnacleTables and return
 a list of DAClsAdvertiserBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdvertiserBinnacleTable in the table prgAdvertiserBinnacleTables and return
 a list of DAClsAdvertiserBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.FetchByBinnacle(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleTable in the table prgAdvertiserBinnacleTables and return
 a list of DAClsAdvertiserBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pTableName"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pTableName"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.GetFilters(System.String,System.String,System.String[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.GetFilters(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdvertiserBinnacleTables and
 return a list of DAClsAdvertiserBinnacleTables.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Insert(SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Struct)">
	<summary>
 Insert a new registry in the table prgAdvertiserBinnacleTables and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacleTable to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Update(SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Struct)">
	<summary>
 Update a registry in the table prgAdvertiserBinnacleTables and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacleTable to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdvertiserBinnacleTables and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacleTables">
	<summary>
 Represents a controller of data for the prgAdvertiserBinnacleTables table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserProjectInvoiceDetails 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Fetch">
	<summary>
 Reads the data of all the AdvertiserProjectInvoiceDetails in the table appAdvertiserProjectInvoiceDetails and return
 a list of DAClsAdvertiserProjectInvoiceDetails.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoiceDetails.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoiceDetail in the table appAdvertiserProjectInvoiceDetails and return
 a list of DAClsAdvertiserProjectInvoiceDetails.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoiceDetails.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.FetchInvoiceDetail(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoiceDetail in the table appAdvertiserProjectInvoiceDetails and return
 a list of DAClsAdvertiserProjectInvoiceDetails.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoiceDetails.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserProjectInvoiceDetails and
 return a list of DAClsAdvertiserProjectInvoiceDetails.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Insert(SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserProjectInvoiceDetails and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserProjectInvoiceDetail to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Update(SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Struct)">
	<summary>
 Update a registry in the table appAdvertiserProjectInvoiceDetails and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserProjectInvoiceDetail to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserProjectInvoiceDetails and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjectInvoiceDetails">
	<summary>
 Represents a controller of data for the appAdvertiserProjectInvoiceDetails table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleUsers.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdministratorUsers 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.Fetch">
	<summary>
 Reads the data of all the AdministratorUsers in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.Fetch(SCT.DataAccess.Logs)">
	<summary>
 Reads the data of all the AdministratorUsers in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.Fetch(SCT.DataAccess.Logs[])">
	<summary>
 Reads the data of all the AdministratorUsers in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.Fetch(SCT.DataAccess.Logs,System.Int64)">
	<summary>
 Read the data of a certain AdministratorUser in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of AdministratorUser to fetch</param>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.GetLog(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.GetLogList(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.GetLogList(SCT.DataAccess.Logs[])">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.CreateSql(SCT.DataAccess.Logs[],System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleUsers.DoFetch(SCT.DataAccess.Logs[],System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdministratorUsers and
 return a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleUsers">
	<summary>
 Represents a controller of data for the prgAdministratorUsers table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappSubscribersDemographics.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appSubscribersDemographics
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.Fetch">
	<summary>
 Reads the data of all the Subscribers Demographics in the table appSubscribersDemographics and return
 a list of DAClsSubscriberDemographic.Struct with each one of the read registries
 </summary>
	<returns>List of  DAClsSubscribersDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Subscriber Demographic in the table appSubscribersDemographics and return
 a list of DAClsappSubscriberDemographic.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Subscriber Demographic to fetch</param>
	<returns>List of  DAClsSubscribersDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.Fetch(System.Int64,System.String)">
	<summary>
 Reads the data of all the Subscribers Demographics in the table appSubscribersDemographics and return
 a list of DAClsSubscriberDemographic.Struct with each one of the read registries
 </summary>
	<returns>List of  DAClsSubscribersDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.Fetch(System.Int64[],System.String[])">
	<summary>
 Reads the data of all the Subscribers Demographics in the table appSubscribersDemographics and return
 a list of DAClsSubscriberDemographic.Struct with each one of the read registries
 </summary>
	<returns>List of  DAClsSubscribersDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.FetchSubscriberDemographics(System.Int64)">
	<summary>
 Read the data of the Subscriber demographic info in the table appSubscribersDemographics and
 return a list of DAClsSubscriberDemographics.Struct with each one of the read registries 
 </summary>
	<param name="pIDSubscriber">Subcriber ID of demographic info to fetch</param>
	<returns>List of DAClsSubscribersDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.GetParamsList(System.Int64,System.String)">
	<summary>
	</summary>
	<param name="pIDSubscriber"></param>
	<param name="pDemographicTag"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.GetParamsList(System.Int64[],System.String[])">
	<summary>
	</summary>
	<param name="pIDSubscribers"></param>
	<param name="pDemographicTags"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appSubscribersDemographics and
 return a list of DAClsSubscriberDemographic.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.RefreshStruct(SCT.DataAccess.DAClsappSubscribersDemographics.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.Insert(SCT.DataAccess.DAClsappSubscribersDemographics.Struct)">
	<summary>
 Insert a new registry in the table appSubscribersDemographics and return Subscriber Demographic ID
 </summary>
	<param name="pStruct">Struct with data of the Subscriber Demographic to insert</param>
	<returns>Subscriber Demographic ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.Update(SCT.DataAccess.DAClsappSubscribersDemographics.Struct)">
	<summary>
 Update a registry in the table appSubscribersDemographics and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Subscriber Demographic to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersDemographics.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appSubscribersDemographics and return the number of rows affected
 </summary>
	<param name="pID">ID of the Subscriber Demographic</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappSubscribersDemographics">
	<summary>
 Represents a controller of data for the appSubscribersDemographics table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappSubscribersAccounts.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserAccount 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.Fetch">
	<summary>
 Reads the data of all the Subscribers Accountst in the table appSubscribersAccounts and return
 a list of DAClsSubscriberAccount.Struct with each one of the read registries
 </summary>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Subscriber Account in the table appSubscribersAccounts and return
 a list of DAClsSubscriberAccount.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Subscriber Account to fetch</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.FetchByLogin(System.String)">
	<summary>
	</summary>
	<param name="plogin"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.FetchBySerialNbr(System.String)">
	<summary>
	</summary>
	<param name="pSerialNbr"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.FetchByMacAddress(System.String)">
	<summary>
	</summary>
	<param name="pMacAddress"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.FetchWebSubscriber(System.String,System.String)">
	<summary>
 Read the data of a certain Advertiser Account in the table appAdvertiserAccount and return
 a list of DAClsAdvertiserAccount.Struct with each one of the read registries 
 </summary>
	<param name="pLogin"></param>
	<param name="pWebPassword"></param>
	<returns>List of DAClsAdvertiserAccount.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.FetchClientSubscriber(System.String,System.String)">
	<summary>
 Read the data of a certain Advertiser Account in the table appAdvertiserAccount and return
 a list of DAClsAdvertiserAccount.Struct with each one of the read registries 
 </summary>
	<param name="pComputerSerialNumber"></param>
	<param name="pClientPassword"></param>
	<returns>List of DAClsAdvertiserAccount.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appSubscribersAccounts and
 return a list of DAClsSubscriberAccount.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.RefreshStruct(SCT.DataAccess.DAClsappSubscribersAccounts.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.Insert(SCT.DataAccess.DAClsappSubscribersAccounts.Struct)">
	<summary>
 Insert a new registry in the table appSubscribersAccounts and return Subscriber Account ID
 </summary>
	<param name="pStruct">Struct with data of the Subscriber Account to insert</param>
	<returns>Subscriber Account ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.Update(SCT.DataAccess.DAClsappSubscribersAccounts.Struct)">
	<summary>
 Update a registry in the table appSubscribersAccounts and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Subscriber Account to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscribersAccounts.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appSubscribersAccounts and return the number of rows affected
 </summary>
	<param name="pID">ID of the Subscriber Account</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappSubscribersAccounts">
	<summary>
 Represents a controller of data for the appSubscribersAccounts table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgForms.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgForms 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.Fetch">
	<summary>
 Reads the data of all the Forms in the table prgForms and return
 a list of DAClsForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Form in the table prgForms and return
 a list of DAClsForms.Struct with each one of the read registries 
 </summary>
	<param name="pID">Id of Form to fetch</param>
	<returns>List of DAClsForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.Fetch(System.String)">
	<summary>
 Read the data of a certain Form in the table prgForms and return
 a list of DAClsForms.Struct with each one of the read registries 
 </summary>
	<param name="pDescription">Description of Form to fetch</param>
	<returns>List of DAClsForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.Fetch(System.String,System.String)">
	<summary>
 Read the data of a certain Form in the table prgForms and return
 a list of DAClsForms.Struct with each one of the read registries 
 </summary>
	<param name="pDescription">Description of Form to fetch</param>
	<param name="pLogDescription"></param>
	<returns>List of DAClsForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.Fetch(System.String,System.String[])">
	<summary>
 Read the data of a certain Form in the table prgForms and return
 a list of DAClsForms.Struct with each one of the read registries 
 </summary>
	<param name="pDescription">Description of Form to fetch</param>
	<param name="pLogDescriptions"></param>
	<returns>List of DAClsForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.GetParamsList(System.String,System.String)">
	<summary>
	</summary>
	<param name="pDescription "></param>
	<param name="pLogDescription"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.GetParamsList(System.String,System.String[])">
	<summary>
	</summary>
	<param name="pDescription "></param>
	<param name="pLogDescriptions"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgForms and
 return a list of DAClsForms.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.RefreshStruct(SCT.DataAccess.DAClsprgForms.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.Insert(SCT.DataAccess.DAClsprgForms.Struct)">
	<summary>
 Insert a new registry in the table prgForms and return ID
 </summary>
	<param name="pStruct">Struct with data of the Form to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.Update(SCT.DataAccess.DAClsprgForms.Struct)">
	<summary>
 Update a registry in the table prgForms and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Form to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgForms.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgForms and return the number of rows affected
 </summary>
	<param name="ID">Id of Form to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgForms">
	<summary>
 Represents a controller of data for the prgForms table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserContactNotes.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserNotes
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.Fetch">
	<summary>
 Reads the data of all the Advertiser Notes in the table appAdvertiserNotes and return
 a list of DAClsAdvertiserNotes.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserNotes.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Advertiser Notes in the table appAdvertiserNotes and return
 a list of DAClsAdvertiserNotes.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Advertiser Notes to fetch</param>
	<returns>List of DAClsAdvertiserNotes.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.Fetch(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.Fetch(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.GetParamsList(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDContact"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.GetParamsList(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDContacts"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactNotes.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserNotes and
 return a list of DAClsAdvertiserNotes.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserContactNotes">
	<summary>
 Represents a controller of data for the appAdvertiserNotes table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleFormFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.FetchByBinnacleFormEntry(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleFormFields in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.Logs)">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.Logs[])">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.GetLog(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.GetLogList(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.GetLogList(SCT.DataAccess.Logs[])">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.CreateSql(SCT.DataAccess.Logs[],System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.CreateSql(SCT.DataAccess.Logs[],System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry.DoFetch(SCT.DataAccess.Logs[],System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleFormFields and
 return a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleFormFieldEntry">
	<summary>
 Represents a controller of data for the prgAdminBinnacleFormFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdvertiserBinnacleForms 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Fetch">
	<summary>
 Reads the data of all the AdvertiserBinnacleForms in the table prgAdvertiserBinnacleForms and return
 a list of DAClsAdvertiserBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleForm in the table prgAdvertiserBinnacleForms and return
 a list of DAClsAdvertiserBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdvertiserBinnacleForm in the table prgAdvertiserBinnacleForms and return
 a list of DAClsAdvertiserBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdvertiserBinnacleForm in the table prgAdvertiserBinnacleForms and return
 a list of DAClsAdvertiserBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.FetchByBinnacle(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleForm in the table prgAdvertiserBinnacleForms and return
 a list of DAClsAdvertiserBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.GetParametersLists(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.GetParametersLists(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdvertiserBinnacleForms and
 return a list of DAClsAdvertiserBinnacleForms.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Insert(SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Struct)">
	<summary>
 Insert a new registry in the table prgAdvertiserBinnacleForms and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacleForm to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Update(SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Struct)">
	<summary>
 Update a registry in the table prgAdvertiserBinnacleForms and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacleForm to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdvertiserBinnacleForms and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacleForms">
	<summary>
 Represents a controller of data for the prgAdvertiserBinnacleForms table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgOperations.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgOperations 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.Fetch">
	<summary>
 Reads the data of all the Operations in the table prgOperations and return
 a list of DAClsOperations.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsOperations.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Operation in the table prgOperations and return
 a list of DAClsOperations.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsOperations.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.Fetch(System.String)">
	<summary>
 Read the data of a certain Operation in the table prgOperations and return
 a list of DAClsOperations.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsOperations.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgOperations and
 return a list of DAClsOperations.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.RefreshStruct(SCT.DataAccess.DAClsprgOperations.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.Insert(SCT.DataAccess.DAClsprgOperations.Struct)">
	<summary>
 Insert a new registry in the table prgOperations and return ID
 </summary>
	<param name="pStruct">Struct with data of the Operation to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.Update(SCT.DataAccess.DAClsprgOperations.Struct)">
	<summary>
 Update a registry in the table prgOperations and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Operation to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgOperations.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgOperations and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgOperations">
	<summary>
 Represents a controller of data for the prgOperations table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleFormFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleFormFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.FetchByBinnacleForm(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleFormFields in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.Logs)">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.Logs[])">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.GetLog(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.GetLogList(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.GetLogList(SCT.DataAccess.Logs[])">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.CreateSql(SCT.DataAccess.Logs[],System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.CreateSql(SCT.DataAccess.Logs[],System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormFields.DoFetch(SCT.DataAccess.Logs[],System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleFormFields and
 return a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleFormFields">
	<summary>
 Represents a controller of data for the prgAdminBinnacleFormFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappSubscriberStolenReports.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appSubscriberStolenReports
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.Fetch">
	<summary>
 Reads the data of all the Subscriber Stolen Reports in the table appSubscriberStolenReports
 and return a list of DAClsSubscriberStolenReport.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberStolenReport.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Subscriber Stolen Report in the table appSubscriberStolenReports
 and return a list of DAClsSubscriberStolenReport.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Subscriber Stolen Report to fetch</param>
	<returns>List of DAClsSubscriberStolenReport.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.Fetch(System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the Subscriber Stolen Reports in the table appSubscriberStolenReports
 and return a list of DAClsSubscriberStolenReport.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberStolenReport.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.Fetch(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the Subscriber Stolen Reports in the table appSubscriberStolenReports
 and return a list of DAClsSubscriberStolenReport.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberStolenReport.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.FetchSubscriberStolenReports(System.Int64)">
	<summary>
 Read the data of the Subscriber Stolen Reports in the table appSubscriberStolenReports and
 return a list of DAClsSubscriberStolenReport.Struct with each one of the read registries 
 </summary>
	<param name="pIDSubscriber">Subscriber ID of Stolen Reports to fetch</param>
	<returns>List of DAClsSubscriberStolenReport.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.GetParamsList(System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDSubscriber"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.GetParamsList(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDSubscribers"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appSubscriberStolenReports and
 return a list of DAClsSubscriberStolenReport.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.RefreshStruct(SCT.DataAccess.DAClsappSubscriberStolenReports.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.Insert(SCT.DataAccess.DAClsappSubscriberStolenReports.Struct)">
	<summary>
 Insert a new registry in the table appSubscriberStolenReports and return Subscriber Stolen Report ID
 </summary>
	<param name="pStruct">Struct with data of the Subscriber Stolen Report to insert</param>
	<returns>Subscriber Stolen Report ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.Update(SCT.DataAccess.DAClsappSubscriberStolenReports.Struct)">
	<summary>
 Update a registry in the table appSubscriberStolenReports and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Subscriber Stolen Report to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberStolenReports.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appSubscriberStolenReports and return the number of rows affected
 </summary>
	<param name="pID">ID of the Subscriber Stolen Reports to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappSubscriberStolenReports">
	<summary>
 Represents a controller of data for the DAClsappSubscriberStolenReports table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleFormFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleFormFields in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.FetchByBinnacleForm(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleFormField in the table prgAdminBinnacleFormFields and return
 a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleFormFields and
 return a list of DAClsAdminBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Insert(SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Struct)">
	<summary>
 Insert a new registry in the table prgAdminBinnacleFormFields and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacleFormField to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Update(SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Struct)">
	<summary>
 Update a registry in the table prgAdminBinnacleFormFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacleFormField to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdminBinnacleFormFields and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacleFormFields">
	<summary>
 Represents a controller of data for the prgAdminBinnacleFormFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.Struct">
	<summary>
 Represents one structures with the data of a registry of the table
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.Fetch">
	<summary>
 Reads the data of all the AdvertiserProjectInvoices in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.Fetch(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.Fetch(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.GetParamsList(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDAdvertiser"></param>
	<param name="pIDAdvertiserProject"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.GetParamsList(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDAdvertisers"></param>
	<param name="pIDAdvertiserProjects"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserProjectInvoices and
 return a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserTransactionInvoices">
	<summary>
 Represents a controller of data for the appAdvertiserProjectInvoices tables in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdvertiserBinnacleTableFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Fetch">
	<summary>
 Reads the data of all the AdvertiserBinnacleTableFields in the table prgAdvertiserBinnacleTableFields and return
 a list of DAClsAdvertiserBinnacleTableFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleTableField in the table prgAdvertiserBinnacleTableFields and return
 a list of DAClsAdvertiserBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
 Read the data of a certain AdvertiserBinnacleTableField in the table prgAdvertiserBinnacleTableFields and return
 a list of DAClsAdvertiserBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
 Read the data of a certain AdvertiserBinnacleTableField in the table prgAdvertiserBinnacleTableFields and return
 a list of DAClsAdvertiserBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.FetchByBinnacleTable(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleTableField in the table prgAdvertiserBinnacleTableFields and return
 a list of DAClsAdvertiserBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
	</summary>
	<param name="pIDBinnacleTable"></param>
	<param name="pFieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
	</summary>
	<param name="pIDBinnacleTable"></param>
	<param name="pFieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.GetFilters(System.String,System.String,System.String[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdvertiserBinnacleTableFields and
 return a list of DAClsAdvertiserBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Insert(SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Struct)">
	<summary>
 Insert a new registry in the table prgAdvertiserBinnacleTableFields and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacleTableField to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Update(SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Struct)">
	<summary>
 Update a registry in the table prgAdvertiserBinnacleTableFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacleTableField to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdvertiserBinnacleTableFields and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacleTableFields">
	<summary>
 Represents a controller of data for the prgAdvertiserBinnacleTableFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleTableFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleTableFields in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.FetchByBinnacleTable(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
	</summary>
	<param name="pIDBinnacleTable"></param>
	<param name="pFieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
	</summary>
	<param name="pIDBinnacleTable"></param>
	<param name="pFieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.GetParametersLists(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.GetParametersLists(System.String,System.String,System.String[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleTableFields and
 return a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Insert(SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Struct)">
	<summary>
 Insert a new registry in the table prgAdminBinnacleTableFields and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacleTableField to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Update(SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Struct)">
	<summary>
 Update a registry in the table prgAdminBinnacleTableFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacleTableField to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdminBinnacleTableFields and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacleTableFields">
	<summary>
 Represents a controller of data for the prgAdminBinnacleTableFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeProfiles.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdministratorProfiles 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.Fetch">
	<summary>
 Reads the data of all the AdministratorProfiles in the table prgAdministratorProfiles and return
 a list of DAClsAdministratorProfiles.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdministratorProfiles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdministratorProfile in the table prgAdministratorProfiles and return
 a list of DAClsAdministratorProfiles.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of AdministratorProfile to fetch</param>
	<returns>List of DAClsAdministratorProfiles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.Fetch(System.String)">
	<summary>
 Read the data of a certain AdministratorProfile in the table prgAdministratorProfiles and return
 a list of DAClsAdministratorProfiles.Struct with each one of the read registries 
 </summary>
	<param name="pDescription">Description of AdministratorProfile to fetch</param>
	<returns>List of DAClsAdministratorProfiles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.FetchByDescription(System.String)">
	<summary>
 Read the data of a certain AdministratorProfile in the table prgAdministratorProfiles and return
 a list of DAClsAdministratorProfiles.Struct with each one of the read registries 
 </summary>
	<param name="pDescription">Description of AdministratorProfile to fetch</param>
	<returns>List of DAClsAdministratorProfiles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.GetParamsList(System.String)">
	<summary>
	</summary>
	<param name="pDescription "></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdministratorProfiles and
 return a list of DAClsAdministratorProfiles.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.RefreshStruct(SCT.DataAccess.DAClsprgAdministrativeProfiles.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.Insert(SCT.DataAccess.DAClsprgAdministrativeProfiles.Struct)">
	<summary>
 Insert a new registry in the table prgAdministratorProfiles and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdministratorProfile to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.Update(SCT.DataAccess.DAClsprgAdministrativeProfiles.Struct)">
	<summary>
 Update a registry in the table prgAdministratorProfiles and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdministratorProfile to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeProfiles.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdministratorProfiles and return the number of rows affected
 </summary>
	<param name="pID">ID of AdministratorProfile to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeProfiles">
	<summary>
 Represents a controller of data for the prgAdministratorProfiles table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgGroups.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgGroups 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.Fetch">
	<summary>
 Reads the data of all the Groups in the table prgGroups and return
 a list of DAClsGroups.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsGroups.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Group in the table prgGroups and return
 a list of DAClsGroups.Struct with each one of the read registries 
 </summary>
	<param name="pID">Id of Group to fetch</param>
	<returns>List of DAClsGroups.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.Fetch(System.String)">
	<summary>
 Read the data of a certain Group in the table prgGroups and return
 a list of DAClsGroups.Struct with each one of the read registries 
 </summary>
	<param name="pDescription"></param>
	<returns>List of DAClsGroups.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.Fetch(System.Int64,System.String)">
	<summary>
 Read the data of a certain Group in the table prgGroups and return
 a list of DAClsGroups.Struct with each one of the read registries 
 </summary>
	<param name="pIDForm">Id of form to fetch</param>
	<param name="pDescription"></param>
	<returns>List of DAClsGroups.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.Fetch(System.Int64[],System.String)">
	<summary>
 Read the data of a certain Group in the table prgGroups and return
 a list of DAClsGroups.Struct with each one of the read registries 
 </summary>
	<param name="pIDForm">Id of form to fetch</param>
	<param name="pDescription"></param>
	<returns>List of DAClsGroups.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.FetchByForm(System.Int64)">
	<summary>
 Read the data of a certain Group in the table prgGroups and return
 a list of DAClsGroups.Struct with each one of the read registries 
 </summary>
	<param name="pIDForm">Id of Form to fetch</param>
	<returns>List of DAClsGroups.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.FetchByForm(System.Int64,System.String)">
	<summary>
 Read the data of a certain Group in the table prgGroups and return
 a list of DAClsGroups.Struct with each one of the read registries 
 </summary>
	<param name="pIDForm">Id of Form to fetch</param>
	<param name="pDescription"></param>
	<returns>List of DAClsGroups.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.GetParamsList(System.Int64,System.String)">
	<summary>
	</summary>
	<param name="pIDForm"></param>
	<param name="pDescription "></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.GetParamsList(System.Int64[],System.String)">
	<summary>
	</summary>
	<param name="pIDForm"></param>
	<param name="pDescription "></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgGroups and
 return a list of DAClsGroups.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.RefreshStruct(SCT.DataAccess.DAClsprgGroups.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.Insert(SCT.DataAccess.DAClsprgGroups.Struct)">
	<summary>
 Insert a new registry in the table prgGroups and return ID
 </summary>
	<param name="pStruct">Struct with data of the Group to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.Update(SCT.DataAccess.DAClsprgGroups.Struct)">
	<summary>
 Update a registry in the table prgGroups and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Group to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgGroups.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgGroups and return the number of rows affected
 </summary>
	<param name="ID">Id of Group to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgGroups">
	<summary>
 Represents a controller of data for the prgGroups table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserContactToDo.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserToDo
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.Fetch">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of AdvertiserToDo to fetch</param>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.Fetch(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.Fetch(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.GetParamsList(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDContact"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.GetParamsList(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDContacts"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactToDo.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserProjectInvoices and
 return a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserContactToDo">
	<summary>
 Represents a controller of data for the appAdvertiserToDo tables in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgSubscriberBinnacleFormFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Fetch">
	<summary>
 Reads the data of all the SubscriberBinnacleFormFields in the table prgSubscriberBinnacleFormFields and return
 a list of DAClsSubscriberBinnacleFormFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleFormField in the table prgSubscriberBinnacleFormFields and return
 a list of DAClsSubscriberBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleFormField in the table prgSubscriberBinnacleFormFields and return
 a list of DAClsSubscriberBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleFormField in the table prgSubscriberBinnacleFormFields and return
 a list of DAClsSubscriberBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.FetchByBinnacleForm(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleFormField in the table prgSubscriberBinnacleFormFields and return
 a list of DAClsSubscriberBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgSubscriberBinnacleFormFields and
 return a list of DAClsSubscriberBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Insert(SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Struct)">
	<summary>
 Insert a new registry in the table prgSubscriberBinnacleFormFields and return ID
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacleFormField to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Update(SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Struct)">
	<summary>
 Update a registry in the table prgSubscriberBinnacleFormFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacleFormField to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgSubscriberBinnacleFormFields and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacleFormFields">
	<summary>
 Represents a controller of data for the prgSubscriberBinnacleFormFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserAccount.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserAccount 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.Fetch">
	<summary>
 Reads the data of all the Advertiser Account in the table appAdvertiserAccount and return
 a list of DAClsAdvertiserAccount.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserAccount.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Advertiser Account in the table appAdvertiserAccount and return
 a list of DAClsAdvertiserAccount.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Advertiser Account to fetch</param>
	<returns>List of DAClsAdvertiserAccount.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.Fetch(System.String)">
	<summary>
 Reads the data of all the Advertiser Account in the table appAdvertiserAccount and return
 a list of DAClsAdvertiserAccount.Struct with each one of the read registries
 </summary>
	<param name="pLogin"></param>
	<returns>List of DAClsAdvertiserAccount.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.Fetch(System.String,System.String)">
	<summary>
 Read the data of a certain Advertiser Account in the table appAdvertiserAccount and return
 a list of DAClsAdvertiserAccount.Struct with each one of the read registries 
 </summary>
	<param name="pLogin"></param>
	<param name="pPassword"></param>
	<returns>List of DAClsAdvertiserAccount.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserAccount and
 return a list of DAClsAdvertiserAccount.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserAccount.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.Insert(SCT.DataAccess.DAClsappAdvertiserAccount.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserAccount and return Advertiser Account ID
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Account to insert</param>
	<returns>Advertiser Account ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.Update(SCT.DataAccess.DAClsappAdvertiserAccount.Struct)">
	<summary>
 Update a registry in the table appAdvertiserAccount and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Account to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAccount.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserAccount and return the number of rows affected
 </summary>
	<param name="pID">ID of the Advertiser Account</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserAccount">
	<summary>
 Represents a controller of data for the appAdvertiserAccount table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="P:SCT.DataAccess.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:SCT.DataAccess.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:SCT.DataAccess.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.Struct">
	<summary>
 Represents one structures with the data of a registry of the table
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.Fetch">
	<summary>
 Reads the data of all the AdvertiserProjectInvoices in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.Fetch(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.Fetch(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.GetParamsList(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDAdvertiser"></param>
	<param name="pIDAdvertiserProject"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.GetParamsList(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDAdvertisers"></param>
	<param name="pIDAdvertiserProjects"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserProjectInvoices and
 return a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserTransactionReceipts">
	<summary>
 Represents a controller of data for the appAdvertiserProjectReceipts tables in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleTables.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleTables 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.FetchByBinnacle(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleTables in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.Logs)">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.Logs[])">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.GetLog(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.GetLogList(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.GetLogList(SCT.DataAccess.Logs[])">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pTableName"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pTableName"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.GetParametersLists(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.GetParametersLists(System.String,System.String,System.String[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.GetFilters(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.CreateSql(SCT.DataAccess.Logs[],System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.CreateSql(SCT.DataAccess.Logs[],System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTables.DoFetch(SCT.DataAccess.Logs[],System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleTables and
 return a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleTables">
	<summary>
 Represents a controller of data for the prgAdminBinnacleTables table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappSubscriberConnectionHistory.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appSubscribersDemographics
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.Fetch">
	<summary>
 Reads the data of all the Subscriber Connection History in the table appSubscriberConnectionHistory
 and return a list of DAClsSubscriberConnectionHistory.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberConnectionHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Subscriber Connection History in the table appSubscriberConnectionHistory
 and return a list of DAClsSubscriberConnectionHistory.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Subscriber Connection History to fetch</param>
	<returns>List of DAClsSubscriberConnectionHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.Fetch(System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the Subscriber Connection History in the table appSubscriberConnectionHistory
 and return a list of DAClsSubscriberConnectionHistory.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberConnectionHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.Fetch(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the Subscriber Connection History in the table appSubscriberConnectionHistory
 and return a list of DAClsSubscriberConnectionHistory.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberConnectionHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.FetchSubscriberConnectionHistory(System.Int64)">
	<summary>
 Read the data of the Subscriber Connections History in the table appSubscriberConnectionHistory and
 return a list of DAClsSubscriberConnectionHistory.Struct with each one of the read registries 
 </summary>
	<param name="pIDSubscriber">Subscriber ID of connection history to fetch</param>
	<returns>List of DAClsSubscriberConnectionHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.GetParamsList(System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDSubscriber"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.GetParamsList(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDSubscribers"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appSubscriberConnectionHistory and
 return a list of DAClsSubscriberConnectionHistory.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.RefreshStruct(SCT.DataAccess.DAClsappSubscriberConnectionHistory.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.Insert(SCT.DataAccess.DAClsappSubscriberConnectionHistory.Struct)">
	<summary>
 Insert a new registry in the table appSubscriberConnectionHistory and return Subscriber Connection History ID
 </summary>
	<param name="pStruct">Struct with data of the Subscriber Connection History to insert</param>
	<returns>Subscriber Connection History ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.Update(SCT.DataAccess.DAClsappSubscriberConnectionHistory.Struct)">
	<summary>
 Update a registry in the table appSubscriberConnectionHistory and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Subscriber Connection History to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappSubscriberConnectionHistory.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appSubscriberConnectionHistory and return the number of rows affected
 </summary>
	<param name="pID">ID of the Subscriber Connection History to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappSubscriberConnectionHistory">
	<summary>
 Represents a controller of data for the appSubscriberConnectionHistory table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdministratorFormPermissions 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Fetch">
	<summary>
 Reads the data of all the AdministratorFormPermissions in the table prgAdministratorFormPermissions and return
 a list of DAClsAdministratorFormPermissions.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdministratorFormPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Fetch(System.Int64,System.Int64)">
	<summary>
 Read the data of a AdministratorFormPermission in the table prgAdministratorFormPermissions and return
 a list of DAClsAdministratorFormPermissions.Struct with each one of the read registries 
 </summary>
	<param name=" pIDProfile ">IDProfile to use</param>
	<param name=" pIDForm ">IDForm to use</param>
	<returns>List of DAClsAdministratorFormPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Fetch(System.Int64[],System.Int64[])">
	<summary>
 Read the data of a AdministratorFormPermission in the table prgAdministratorFormPermissions and return
 a list of DAClsAdministratorFormPermissions.Struct with each one of the read registries 
 </summary>
	<param name=" pIDProfiles">IDProfile to use</param>
	<param name=" pIDForms">IDForm to use</param>
	<returns>List of DAClsAdministratorFormPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.FetchByProfile(System.Int64)">
	<summary>
 Read the data of the AdministratorFormPermission in the table prgAdministratorFormPermissions and return
 a list of DAClsAdministratorFormPermissions.Struct with each one of the read registries 
 </summary>
	<param name=" pIDProfile ">IDProfile to use</param>
	<returns>List of DAClsAdministratorFormPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.FetchByForm(System.Int64)">
	<summary>
 Read the data of the AdministratorFormPermission in the table prgAdministratorFormPermissions and return
 a list of DAClsAdministratorFormPermissions.Struct with each one of the read registries 
 </summary>
	<param name=" pIDForm ">IDForm to use</param>
	<returns>List of DAClsAdministratorFormPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.GetParamsList(System.Int64,System.Int64)">
	<summary>
	</summary>
	<param name="pIDProfile"></param>
	<param name="pIDForm"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.GetParamsList(System.Int64[],System.Int64[])">
	<summary>
	</summary>
	<param name="pIDProfiles"></param>
	<param name="pIDForms"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.CreateSelectSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.CreateSelectSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdministratorFormPermissions and
 return a list of DAClsAdministratorFormPermissions.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.RefreshStruct(SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Insert(SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Struct)">
	<summary>
 Insert a new registry in the table prgAdministratorFormPermissions and return the number of rows affected
 </summary>
	<param name=" pStruct "></param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Update(SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Struct)">
	<summary>
 Update a registry in the table prgFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Field to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.Delete(System.Int64,System.Int64)">
	<summary>
 Delete a registry in the table prgAdministratorFormPermissions and return the number of rows affected
 </summary>
	<param name=" pIDProfile ">IDProfile to use</param>
	<param name=" pIDForm ">IDForm to use</param>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.DeleteByProfile(System.Int64)">
	<summary>
 Delete a registry in the table prgAdministratorFormPermissions and return the number of rows affected
 </summary>
	<param name=" pIDProfile ">IDProfile to use to delete</param>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.DeleteByForm(System.Int64)">
	<summary>
 Delete a registry in the table prgAdministratorFormPermissions and return the number of rows affected
 </summary>
	<param name=" pIDForm ">IDForm to use to delete</param>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.CreateDeleteSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeFormPermissions.DoDelete(System.String)">
	<summary>
 Execute SQL statement to delete the data of the table tblTasksResources and return number of rows affected
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeFormPermissions">
	<summary>
 Represents a controller of data for the prgAdministratorFormPermissions table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserProjectReceipts 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Fetch">
	<summary>
 Reads the data of all the AdvertiserProjectReceipts in the table appAdvertiserProjectReceipts and return
 a list of DAClsAdvertiserProjectReceipts.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProjectReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Fetch(System.Int64,System.Int64)">
	<summary>
 Reads the data of all the AdvertiserProjectReceipts in the table appAdvertiserProjectReceipts and return
 a list of DAClsAdvertiserProjectReceipts.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProjectReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Fetch(System.Int64[],System.Int64[])">
	<summary>
 Reads the data of all the AdvertiserProjectReceipts in the table appAdvertiserProjectReceipts and return
 a list of DAClsAdvertiserProjectReceipts.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProjectReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.FetchProjectReceipt(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserProjectReceipt in the table appAdvertiserProjectReceipts and return
 a list of DAClsAdvertiserProjectReceipts.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.FetchReceiptProject(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserProjectReceipt in the table appAdvertiserProjectReceipts and return
 a list of DAClsAdvertiserProjectReceipts.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.GetParamsList(System.Int64,System.Int64)">
	<summary>
	</summary>
	<param name="pIDAdvertiserProject"></param>
	<param name="pIDAdvertiserReceipt"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.GetParamsList(System.Int64[],System.Int64[])">
	<summary>
	</summary>
	<param name="pIDAdvertiserProjects"></param>
	<param name="pIDAdvertiserReceipts"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.CreateSelectSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.CreateSelectSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserProjectReceipts and
 return a list of DAClsAdvertiserProjectReceipts.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Insert(SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserProjectReceipts and return IDAdvertiserProject
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserProjectReceipt to insert</param>
	<returns>IDAdvertiserProject</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Update(SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Struct)">
	<summary>
 Update a registry in the table appAdvertiserProjectReceipts and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserProjectReceipt to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.Delete(System.Int64,System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserProjectReceipts and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.DeleteByProject(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserProjectReceipts and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.DeleteByReceipt(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserProjectReceipts and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.CreateDeleteSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectReceipts.DoDelete(System.String)">
	<summary>
 Execute SQL statement to delete the data of the table tblTasksResources and return number of rows affected
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjectReceipts">
	<summary>
 Represents a controller of data for the appAdvertiserProjectReceipts table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleFormEntry.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleForms 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Reads the data of all the AdminBinnacleForms in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleForms in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.Logs)">
	<summary>
 Reads the data of all the AdminBinnacleForms in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.Logs[])">
	<summary>
 Reads the data of all the AdminBinnacleForms in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.GetLog(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.GetLogList(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.GetLogList(SCT.DataAccess.Logs[])">
	<summary>
	</summary>
	<param name="plogs"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.GetParametersList(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.GetParametersList(System.String,System.String,System.DateTime,System.String)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.CreateSql(SCT.DataAccess.Logs[],System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.CreateSql(SCT.DataAccess.Logs[],System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleFormEntry.DoFetch(SCT.DataAccess.Logs[],System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleForms and
 return a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleFormEntry">
	<summary>
 Represents a controller of data for the prgAdminBinnacleForms table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserToDo.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserToDo
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.Fetch">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of AdvertiserToDo to fetch</param>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.Fetch(System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.Fetch(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.FetchContactToDo(System.Int64)">
	<summary>
 Read the data of the Contact Advertiser ToDo in the table appAdvertiserToDo and
 return a list of DAClsAdvertiserToDo.Struct with each one of the read registries 
 </summary>
	<param name="pIDContact">Contact ID of Advertiser ToDo to fetch</param>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.GetParamsList(System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDContact"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.GetParamsList(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDContacts"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserToDo and
 return a list of DAClsAdvertiserToDo.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserToDo.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.Insert(SCT.DataAccess.DAClsappAdvertiserToDo.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserToDo and return AdvertiserToDo ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserToDo to insert</param>
	<returns>AdvertiserToDo ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.Update(SCT.DataAccess.DAClsappAdvertiserToDo.Struct)">
	<summary>
 Update a registry in the table appAdvertiserToDo and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserToDo to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserToDo.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserToDo and return the number of rows affected
 </summary>
	<param name="pID">Id of the AdvertiserToDo to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserToDo">
	<summary>
 Represents a controller of data for the appAdvertiserToDo table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgSubscriberBinnacleTableFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Fetch">
	<summary>
 Reads the data of all the SubscriberBinnacleTableFields in the table prgSubscriberBinnacleTableFields and return
 a list of DAClsSubscriberBinnacleTableFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleTableField in the table prgSubscriberBinnacleTableFields and return
 a list of DAClsSubscriberBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
 Read the data of a certain SubscriberBinnacleTableField in the table prgSubscriberBinnacleTableFields and return
 a list of DAClsSubscriberBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
 Read the data of a certain SubscriberBinnacleTableField in the table prgSubscriberBinnacleTableFields and return
 a list of DAClsSubscriberBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.FetchByBinnacleTable(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleTableField in the table prgSubscriberBinnacleTableFields and return
 a list of DAClsSubscriberBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
	</summary>
	<param name="pIDBinnacleTable"></param>
	<param name="pFieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
	</summary>
	<param name="pIDBinnacleTable"></param>
	<param name="pFieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.GetFilters(System.String,System.String,System.String[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgSubscriberBinnacleTableFields and
 return a list of DAClsSubscriberBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Insert(SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Struct)">
	<summary>
 Insert a new registry in the table prgSubscriberBinnacleTableFields and return ID
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacleTableField to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Update(SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Struct)">
	<summary>
 Update a registry in the table prgSubscriberBinnacleTableFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacleTableField to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgSubscriberBinnacleTableFields and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacleTableFields">
	<summary>
 Represents a controller of data for the prgSubscriberBinnacleTableFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserProjectPriceInfo
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Fetch">
	<summary>
 Reads the data of all the Advertiser Project Price Info in the table appAdvertiserProjectPriceInfo
 and return a list of DAClsAdvertiserProjectPriceInfo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProjectPriceInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Advertiser Project Price Info in the table appAdvertiserProjectPriceInfo
 and return a list of DAClsAdvertiserProjectPriceInfo.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Advertiser Project Price Info to fetch</param>
	<returns>List of DAClsAdvertiserProjectPriceInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.FetchByProject(System.Int64)">
	<summary>
 Read the data of a certain Advertiser Project Price Info in the table appAdvertiserProjectPriceInfo
 and return a list of DAClsAdvertiserProjectPriceInfo.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectPriceInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.FetchByProject(System.Int64[])">
	<summary>
 Read the data of a certain Advertiser Project Price Info in the table appAdvertiserProjectPriceInfo
 and return a list of DAClsAdvertiserProjectPriceInfo.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectPriceInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.FetchProjectPriceInfo(System.Int64)">
	<summary>
 Read the data of the project price info in the table appAdvertiserProjectPriceInfo and
 return a list of DAClsAdvertiserProjectPriceInfo.Struct with each one of the read registries 
 </summary>
	<param name="pIDAdvertiserProject">Project ID of price info to fetch</param>
	<returns>List of DAClsAdvertiserProjectPriceInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.GetParamsList(System.Int64)">
	<summary>
	</summary>
	<param name="pIDAdvertiserProject"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.GetParamsList(System.Int64[])">
	<summary>
	</summary>
	<param name="pIDAdvertiserProjects"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserProjectPriceInfo and
 return a list of DAClsAdvertiserProjectPriceInfo.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Insert(SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserProjectPriceInfo
 and return Advertiser Project Price Info ID
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Project Price Info to insert</param>
	<returns>Advertiser Project Price Info ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Update(SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Struct)">
	<summary>
 Update a registry in the table appAdvertiserProjectPriceInfo and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Project Price Info to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserProjectPriceInfo and return the number of rows affected
 </summary>
	<param name="pID">ID of the Advertiser Project Price Info to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjectPriceInfo">
	<summary>
 Represents a controller of data for the appAdvertiserProjectPriceInfo table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleTables 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleTables in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.FetchByBinnacle(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleTable in the table prgAdminBinnacleTables and return
 a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pTableName"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pTableName"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.GetParametersLists(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.GetParametersLists(System.String,System.String,System.String[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.GetFilters(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleTables and
 return a list of DAClsAdminBinnacleTables.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Insert(SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Struct)">
	<summary>
 Insert a new registry in the table prgAdminBinnacleTables and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacleTable to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Update(SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Struct)">
	<summary>
 Update a registry in the table prgAdminBinnacleTables and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacleTable to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdminBinnacleTables and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacleTables">
	<summary>
 Represents a controller of data for the prgAdminBinnacleTables table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleForms.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleForms 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.FetchByBinnacle(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleForms in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.Logs)">
	<summary>
 Reads the data of all the AdminBinnacleForms in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.Logs[])">
	<summary>
 Reads the data of all the AdminBinnacleForms in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.GetLog(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.GetLogList(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.GetLogList(SCT.DataAccess.Logs[])">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.GetParametersLists(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.GetParametersLists(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.CreateSql(SCT.DataAccess.Logs[],System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.CreateSql(SCT.DataAccess.Logs[],System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleForms.DoFetch(SCT.DataAccess.Logs[],System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleForms and
 return a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleForms">
	<summary>
 Represents a controller of data for the prgAdminBinnacleForms table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdvertiserBinnacleFormFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Fetch">
	<summary>
 Reads the data of all the AdvertiserBinnacleFormFields in the table prgAdvertiserBinnacleFormFields and return
 a list of DAClsAdvertiserBinnacleFormFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleFormField in the table prgAdvertiserBinnacleFormFields and return
 a list of DAClsAdvertiserBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleFormField in the table prgAdvertiserBinnacleFormFields and return
 a list of DAClsAdvertiserBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleFormField in the table prgAdvertiserBinnacleFormFields and return
 a list of DAClsAdvertiserBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.FetchByBinnacleForm(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdvertiserBinnacleFormField in the table prgAdvertiserBinnacleFormFields and return
 a list of DAClsAdvertiserBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserBinnacleFormFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64})">
	<summary>
	</summary>
	<param name="pIDBinnacleForm"></param>
	<param name="pIDField"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdvertiserBinnacleFormFields and
 return a list of DAClsAdvertiserBinnacleFormFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Insert(SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Struct)">
	<summary>
 Insert a new registry in the table prgAdvertiserBinnacleFormFields and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacleFormField to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Update(SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Struct)">
	<summary>
 Update a registry in the table prgAdvertiserBinnacleFormFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserBinnacleFormField to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdvertiserBinnacleFormFields and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdvertiserBinnacleFormFields">
	<summary>
 Represents a controller of data for the prgAdvertiserBinnacleFormFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserContactInfo.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserContactInfo 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.Fetch">
	<summary>
 Reads the data of all the Advertiser Contact Info in the table appAdvertiserContactInfo and return
 a list of DAClsAdvertiserContactInfo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserContactInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Advertiser Contact Info in the table appAdvertiserContactInfo and return
 a list of DAClsAdvertiserContactInfo.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Advertiser Contact Info to fetch</param>
	<returns>List of DAClsAdvertiserContactInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.Fetch(System.Int64,System.Boolean)">
	<summary>
 Reads the data of all the Advertiser Contact Info in the table appAdvertiserContactInfo and return
 a list of DAClsAdvertiserContactInfo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserContactInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.Fetch(System.Int64[],System.Boolean)">
	<summary>
 Reads the data of all the Advertiser Contact Info in the table appAdvertiserContactInfo and return
 a list of DAClsAdvertiserContactInfo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserContactInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.FetchAdvertiserContactInfo(System.Int64)">
	<summary>
 Read the data of the Advertiser Contacts info in the table appAdvertiserContactInfo and
 return a list of DAClsAdvertiserContactInfo.Struct with each one of the read registries 
 </summary>
	<param name="pIDAdvertiser">Advertiser ID of Contact info to fetch</param>
	<returns>List of DAClsAdvertiserContactInfo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.GetParamsList(System.Int64,System.Boolean)">
	<summary>
	</summary>
	<param name="pIDAdvertiser"></param>
	<param name="pMainCompanyAddress"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.GetParamsList(System.Int64[],System.Boolean)">
	<summary>
	</summary>
	<param name="pIDAdvertisers"></param>
	<param name="pMainCompanyAddress"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserContactInfo and
 return a list of DAClsAdvertiserContactInfo.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserContactInfo.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.Insert(SCT.DataAccess.DAClsappAdvertiserContactInfo.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserContactInfo and return Advertiser Contact Info ID
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Contact Info to insert</param>
	<returns>Advertiser Contact Info ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.Update(SCT.DataAccess.DAClsappAdvertiserContactInfo.Struct)">
	<summary>
 Update a registry in the table appAdvertiserContactInfo and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Contact Info to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserContactInfo.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserContactInfo and return the number of rows affected
 </summary>
	<param name="pID">ID of the Advertiser Contact Info to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserContactInfo">
	<summary>
 Represents a controller of data for the appAdvertiserContactInfo table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserDemographics.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserDemographics
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.Fetch">
	<summary>
 Reads the data of all the Advertiser Demographics in the table appAdvertiserDemographics and return
 a list of DAClsAdvertiserDemographic.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Advertiser Demographic in the table appAdvertiserDemographic and return
 a list of DAClsAdvertiserDemographic.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Advertiser Demographic to fetch</param>
	<returns>List of DAClsAdvertiserDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.Fetch(System.Int64,System.String)">
	<summary>
 Read the data of a certain Advertiser Demographic in the table appAdvertiserDemographic and return
 a list of DAClsAdvertiserDemographic.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.Fetch(System.Int64[],System.String[])">
	<summary>
 Read the data of a certain Advertiser Demographic in the table appAdvertiserDemographic and return
 a list of DAClsAdvertiserDemographic.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.FetchProjectDemographics(System.Int64)">
	<summary>
 Read the data of the Project Demographics info in the table appAdvertiserProjectDemographic and
 return a list of DAClsAdvertiserProjectDemographic.Struct with each one of the read registries 
 </summary>
	<param name="pIDProject">Advertiser Project ID of Project Demographic to fetch</param>
	<returns>List of DAClsAdvertiserProjectDemographic.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.GetParamsList(System.Int64,System.String)">
	<summary>
	</summary>
	<param name="pIDAdvertiserProject"></param>
	<param name="pDemographicTag"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.GetParamsList(System.Int64[],System.String[])">
	<summary>
	</summary>
	<param name="pIDAdvertiserProjects"></param>
	<param name="pDemographicTags"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserDemographics and
 return a list of DAClsAdvertiserDemographic.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserDemographics.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.Insert(SCT.DataAccess.DAClsappAdvertiserDemographics.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserDemographics and return Advertiser Demographic ID
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Demographic to insert</param>
	<returns>Advertiser Demographic ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.Update(SCT.DataAccess.DAClsappAdvertiserDemographics.Struct)">
	<summary>
 Update a registry in the table appAdvertiserDemographics and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Demographic to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserDemographics.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserDemographics and return the number of rows affected
 </summary>
	<param name="pID">ID of the Advertiser Demographic to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserDemographics">
	<summary>
 Represents a controller of data for the appAdvertiserDemographics table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeUsers.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdministratorUsers 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Fetch">
	<summary>
 Reads the data of all the AdministratorUsers in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdministratorUser in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of AdministratorUser to fetch</param>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Fetch(System.String)">
	<summary>
 Read the data of a certain AdministratorUser in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="pLogin">Login of AdministratorUser to fetch</param>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Fetch(System.String,System.String)">
	<summary>
 Read the data of a certain AdministratorUser in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="pLogin">Login of AdministratorUser to fetch</param>
	<param name="pPassword"></param>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Fetch(System.Int64,System.String)">
	<summary>
 Read the data of a certain AdministratorUser in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="pIDProfile">Id Profile of AdministratorUser to fetch</param>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Fetch(System.Int64[],System.String)">
	<summary>
 Read the data of a certain AdministratorUser in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="pIDProfile">Id Profile of AdministratorUser to fetch</param>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.FetchByProfile(System.Int64)">
	<summary>
 Read the data of a certain AdministratorUser in the table prgAdministratorUsers and return
 a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="pIDProfile">Id Profile of AdministratorUser to fetch</param>
	<returns>List of DAClsAdministratorUsers.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.GetParamsList(System.Int64,System.String)">
	<summary>
	</summary>
	<param name="pIDProfile"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.GetParamsList(System.Int64[],System.String)">
	<summary>
	</summary>
	<param name="pIDProfiles"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdministratorUsers and
 return a list of DAClsAdministratorUsers.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.RefreshStruct(SCT.DataAccess.DAClsprgAdministrativeUsers.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Insert(SCT.DataAccess.DAClsprgAdministrativeUsers.Struct)">
	<summary>
 Insert a new registry in the table prgAdministratorUsers and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdministratorUser to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Update(SCT.DataAccess.DAClsprgAdministrativeUsers.Struct)">
	<summary>
 Update a registry in the table prgAdministratorUsers and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdministratorUser to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeUsers.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdministratorUsers and return the number of rows affected
 </summary>
	<param name="pID">ID of AdministratorUser to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeUsers">
	<summary>
 Represents a controller of data for the prgAdministratorUsers table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.Fetch">
	<summary>
 Reads the data of all the Fields in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Field in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="pID">Id of Field to fetch</param>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.Fetch(System.String)">
	<summary>
 Read the data of a certain Field in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="pDescription">Id of Field to fetch</param>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.Fetch(System.Int64,System.Int64,System.String)">
	<summary>
 Read the data of a certain Field in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="pDescription">Id of Field to fetch</param>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.Fetch(System.Int64[],System.Int64[],System.String)">
	<summary>
 Read the data of a certain Field in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="pDescription">Id of Field to fetch</param>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.FetchByGroup(System.Int64)">
	<summary>
 Read the data of a certain Field in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="pIDGroup">Id of Group to fetch</param>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.FetchByGroup(System.Int64,System.String)">
	<summary>
 Read the data of a certain Field in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="pIDGroup">Id of Group to fetch</param>
	<param name="pDescription"></param>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.FetchByForm(System.Int64)">
	<summary>
 Read the data of a certain Field in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="pIDForm">Id of form to fetch</param>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.FetchByForm(System.Int64,System.String)">
	<summary>
 Read the data of a certain Field in the table prgFields and return
 a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="pIDForm"></param>
	<param name="pDescription"></param>
	<returns>List of DAClsFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.GetParamsList(System.Int64,System.Int64,System.String)">
	<summary>
	</summary>
	<param name="pIDForm"></param>
	<param name="pDescription "></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.GetParamsList(System.Int64[],System.Int64[],System.String)">
	<summary>
	</summary>
	<param name="pIDForm"></param>
	<param name="pDescription "></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.ClauseWhere(System.String[])">
	<summary>
	</summary>
	<param name="pParam"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgFields and
 return a list of DAClsFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.RefreshStruct(SCT.DataAccess.DAClsprgFields.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.Insert(SCT.DataAccess.DAClsprgFields.Struct)">
	<summary>
 Insert a new registry in the table prgFields and return ID
 </summary>
	<param name="pStruct">Struct with data of the Field to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.Update(SCT.DataAccess.DAClsprgFields.Struct)">
	<summary>
 Update a registry in the table prgFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Field to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgFields.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgFields and return the number of rows affected
 </summary>
	<param name="ID">Id of Field to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgFields">
	<summary>
 Represents a controller of data for the prgFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserProjectInvoices 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Fetch">
	<summary>
 Reads the data of all the AdvertiserProjectInvoices in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Fetch(System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Fetch(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.FetchProjectInvoice(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserProjectInvoice in the table appAdvertiserProjectInvoices and return
 a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserProjectInvoices.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.GetParamsList(System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDAdvertiserProject"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.GetParamsList(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDAdvertiserProjects"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserProjectInvoices and
 return a list of DAClsAdvertiserProjectInvoices.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Insert(SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserProjectInvoices and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserProjectInvoice to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Update(SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Struct)">
	<summary>
 Update a registry in the table appAdvertiserProjectInvoices and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserProjectInvoice to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjectInvoices.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserProjectInvoices and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjectInvoices">
	<summary>
 Represents a controller of data for the appAdvertiserProjectInvoices table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserReceipts.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserReceipts 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.Fetch">
	<summary>
 Reads the data of all the AdvertiserReceipts in the table appAdvertiserReceipts and return
 a list of DAClsAdvertiserReceipts.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.Fetch(System.Int64)">
	<summary>
 Read the data of a certain AdvertiserReceipt in the table appAdvertiserReceipts and return
 a list of DAClsAdvertiserReceipts.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.Fetch(System.Int32,System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain AdvertiserReceipt in the table appAdvertiserReceipts and return
 a list of DAClsAdvertiserReceipts.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.Fetch(System.Int32[],System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain AdvertiserReceipt in the table appAdvertiserReceipts and return
 a list of DAClsAdvertiserReceipts.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserReceipts.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.GetParamsList(System.Int32,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pPaymnetType"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.GetParamsList(System.Int32[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pPaymnetTypes"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserReceipts and
 return a list of DAClsAdvertiserReceipts.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserReceipts.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.Insert(SCT.DataAccess.DAClsappAdvertiserReceipts.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserReceipts and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserReceipt to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.Update(SCT.DataAccess.DAClsappAdvertiserReceipts.Struct)">
	<summary>
 Update a registry in the table appAdvertiserReceipts and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdvertiserReceipt to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserReceipts.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserReceipts and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserReceipts">
	<summary>
 Represents a controller of data for the appAdvertiserReceipts table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacle.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgSubscriberBinnacle 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.Fetch">
	<summary>
 Reads the data of all the SubscriberBinnacles in the table prgSubscriberBinnacle and return
 a list of DAClsSubscriberBinnacles.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacle in the table prgSubscriberBinnacle and return
 a list of DAClsSubscriberBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain SubscriberBinnacle in the table prgSubscriberBinnacle and return
 a list of DAClsSubscriberBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain SubscriberBinnacle in the table prgSubscriberBinnacle and return
 a list of DAClsSubscriberBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain SubscriberBinnacle in the table prgSubscriberBinnacle and return
 a list of DAClsSubscriberBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.FetchByUser(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacle in the table prgSubscriberBinnacle and return
 a list of DAClsSubscriberBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.GetParametersList(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.GetParametersList(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgSubscriberBinnacle and
 return a list of DAClsSubscriberBinnacles.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.Insert(SCT.DataAccess.DAClsprgSubscriberBinnacle.Struct)">
	<summary>
 Insert a new registry in the table prgSubscriberBinnacle and return ID
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacle to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.Update(SCT.DataAccess.DAClsprgSubscriberBinnacle.Struct)">
	<summary>
 Update a registry in the table prgSubscriberBinnacle and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacle to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacle.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgSubscriberBinnacle and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacle">
	<summary>
 Represents a controller of data for the prgSubscriberBinnacle table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjects.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserProjects
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.Fetch">
	<summary>
 Reads the data of all the Advertiser Projects in the table appAdvertiserProjects and return
 a list of DAClsAdvertiserProject.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserProject.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Advertiser Project in the table appAdvertiserProjects and return
 a list of DAClsAdvertiserProject.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Advertiser Project to fetch</param>
	<returns>List of DAClsAdvertiserProject.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.Fetch(System.Int64,System.Int64)">
	<summary>
 Read the data of the Advertiser projects in the table appAdvertiserProjects and
 return a list of DAClsappAdvertiserProject.Struct with each one of the read registries 
 </summary>
	<param name="pIDAdvertiser">Advertiser ID of project to fetch</param>
	<returns>List of DAClsAdvertiserProject.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.Fetch(System.Int64[],System.Int64[])">
	<summary>
 Read the data of the Advertiser projects in the table appAdvertiserProjects and
 return a list of DAClsappAdvertiserProject.Struct with each one of the read registries 
 </summary>
	<param name="pIDAdvertiser">Advertiser ID of project to fetch</param>
	<returns>List of DAClsAdvertiserProject.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.FetchAdvertiserProject(System.Int64)">
	<summary>
 Read the data of the Advertiser projects in the table appAdvertiserProjects and
 return a list of DAClsappAdvertiserProject.Struct with each one of the read registries 
 </summary>
	<param name="pIDAdvertiser">Advertiser ID of project to fetch</param>
	<returns>List of DAClsAdvertiserProject.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.FetchContactProject(System.Int64)">
	<summary>
 Read the data of the contact projects in the table appAdvertiserProjects and
 return a list of DAClsAdvertiserProject.Struct with each one of the read registries 
 </summary>
	<param name="pIDContact">Contact ID of project to fetch</param>
	<returns>List of DAClsAdvertiserProject.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.GetParamsList(System.Int64,System.Int64)">
	<summary>
	</summary>
	<param name="pIDAdvertiser"></param>
	<param name="pIDAdvertiserContact"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.GetParamsList(System.Int64[],System.Int64[])">
	<summary>
	</summary>
	<param name="pIDAdvertisers"></param>
	<param name="pIDAdvertiserContacts"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserProjects and
 return a list of DAClsAdvertiserProject.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserProjects.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.Insert(SCT.DataAccess.DAClsappAdvertiserProjects.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserProjects and return Advertiser Project ID
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Project to insert</param>
	<returns>Advertiser Project ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.Update(SCT.DataAccess.DAClsappAdvertiserProjects.Struct)">
	<summary>
 Update a registry in the table appAdvertiserProjects and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Project to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserProjects.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserProjects and return the number of rows affected
 </summary>
	<param name="pID">Id of the Advertiser Project to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserProjects">
	<summary>
 Represents a controller of data for the appAdvertiserProjects table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserAdHistory.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserAdHistory
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.Fetch">
	<summary>
 Reads the data of all the Advertiser AdHistory in the table appAdvertiserAdHistory and
 return a list of DAClsAdvertiserAdHistory.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserAdHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Advertiser AdHistory in the table appAdvertiserAdHistory and
 return a list of DAClsAdvertiserAdHistory.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Advertiser AdHistory to fetch</param>
	<returns>List of DAClsAdvertiserAdHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.Fetch(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain Advertiser AdHistory in the table appAdvertiserAdHistory and
 return a list of DAClsAdvertiserAdHistory.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserAdHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.Fetch(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Read the data of a certain Advertiser AdHistory in the table appAdvertiserAdHistory and
 return a list of DAClsAdvertiserAdHistory.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdvertiserAdHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.FetchProjectAdHistory(System.Int64)">
	<summary>
 Read the data of the Advertiser AdHistory in the table appAdvertiserAdHistory and
 return a list of DAClsAdvertiserAdHistory.Struct with each one of the read registries 
 </summary>
	<param name="pIDProject">Project ID of AdHistory to fetch</param>
	<returns>List of DAClsAdvertiserAdHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.FetchSubscriberAdHistory(System.Int64)">
	<summary>
 Read the data of the subscriber AdHistory in the table appAdvertiserAdHistory and
 return a list of DAClsAdvertiserAdHistory.Struct with each one of the read registries 
 </summary>
	<param name="pIDSubscriber">Subscriber ID of AdHistory to fetch</param>
	<returns>List of DAClsAdvertiserAdHistory.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.GetParamsList(System.Int64,System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDProject"></param>
	<param name="pIDSubscriber"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.GetParamsList(System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDProjects"></param>
	<param name="pIDSubscribers"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserAdHistory and return
 a list of DAClsAdvertiserAdHistory.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserAdHistory.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.Insert(SCT.DataAccess.DAClsappAdvertiserAdHistory.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserAdHistory and return Advertiser AdHistory ID
 </summary>
	<param name="pStruct">Struct with data of the Advertiser AdHistory to insert</param>
	<returns>Advertiser AdHistory ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.Update(SCT.DataAccess.DAClsappAdvertiserAdHistory.Struct)">
	<summary>
 Update a registry in the table appAdvertiserAdHistory and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Advertiser AdHistory to Update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserAdHistory.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserAdHistory and return the number of rows affected
 </summary>
	<param name="pID">ID of the Advertiser AdHistory to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserAdHistory">
	<summary>
 Represents a controller of data for the appAdvertiserAdHistory table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleForms 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleForms in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.FetchByBinnacle(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleForm in the table prgAdminBinnacleForms and return
 a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleForms.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pIDForm"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.GetParametersLists(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.GetParametersLists(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleForms and
 return a list of DAClsAdminBinnacleForms.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Insert(SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Struct)">
	<summary>
 Insert a new registry in the table prgAdminBinnacleForms and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacleForm to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Update(SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Struct)">
	<summary>
 Update a registry in the table prgAdminBinnacleForms and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacleForm to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdminBinnacleForms and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacleForms">
	<summary>
 Represents a controller of data for the prgAdminBinnacleForms table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacle.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacle 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch">
	<summary>
 Reads the data of all the AdminBinnacles in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.Logs)">
	<summary>
 Reads the data of all the AdminBinnacles in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.Logs[])">
	<summary>
 Reads the data of all the AdminBinnacles in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.GetLog(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.GetLogList(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.GetLogList(SCT.DataAccess.Logs[])">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.GetParametersList(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.GetParametersList(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.CreateSql(SCT.DataAccess.Logs[],System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.CreateSql(SCT.DataAccess.Logs[],System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacle.DoFetch(SCT.DataAccess.Logs[],System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacle and
 return a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacle">
	<summary>
 Represents a controller of data for the prgAdminBinnacle table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleTableFields.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacleTableFields 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.FetchByBinnacleTable(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch">
	<summary>
 Reads the data of all the AdminBinnacleTableFields in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.Logs)">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.Logs,SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.Logs[])">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.Fetch(SCT.DataAccess.Logs[],SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
 Read the data of a certain AdminBinnacleTableField in the table prgAdminBinnacleTableFields and return
 a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacleTableFields.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.GetLog(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.GetLogList(SCT.DataAccess.Logs)">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.GetLogList(SCT.DataAccess.Logs[])">
	<summary>
	</summary>
	<param name="plog"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String})">
	<summary>
	</summary>
	<param name="pIDBinnacleTable"></param>
	<param name="pFieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String})">
	<summary>
	</summary>
	<param name="pIDBinnacleTable"></param>
	<param name="pFieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.GetParametersLists(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.GetParametersLists(System.String,System.String,System.String[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.CreateSql(SCT.DataAccess.Logs[],System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.CreateSql(SCT.DataAccess.Logs[],System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgBinnacleTableFields.DoFetch(SCT.DataAccess.Logs[],System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacleTableFields and
 return a list of DAClsAdminBinnacleTableFields.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgBinnacleTableFields">
	<summary>
 Represents a controller of data for the prgAdminBinnacleTableFields table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdministratorGroupPermissions 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Fetch">
	<summary>
 Reads the data of all the AdministratorGroupPermissions in the table prgAdministratorGroupPermissions and return
 a list of DAClsAdministratorGroupPermissions.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdministratorGroupPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Fetch(System.Int64,System.Int64,System.Int64)">
	<summary>
 Read the data of a AdministratorGroupPermission in the table prgAdministratorGroupPermissions and return
 a list of DAClsAdministratorGroupPermissions.Struct with each one of the read registries 
 </summary>
	<param name="pIDGroup">IDGroup to use</param>
	<param name="pIDProfile">IDProfile to use</param>
	<param name="pIDForm">IDForm to use</param>
	<returns>List of DAClsAdministratorGroupPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Fetch(System.Int64[],System.Int64[],System.Int64[])">
	<summary>
 Read the data of a AdministratorGroupPermission in the table prgAdministratorGroupPermissions and return
 a list of DAClsAdministratorGroupPermissions.Struct with each one of the read registries 
 </summary>
	<param name="pIDGroup">IDGroup to use</param>
	<param name="pIDProfile">IDProfile to use</param>
	<param name="pIDForm">IDForm to use</param>
	<returns>List of DAClsAdministratorGroupPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.FetchByGroup(System.Int64)">
	<summary>
 Read the data of the AdministratorGroupPermission in the table prgAdministratorGroupPermissions and return
 a list of DAClsAdministratorGroupPermissions.Struct with each one of the read registries 
 </summary>
	<param name=" pIDGroup ">IDGroup to use</param>
	<returns>List of DAClsAdministratorGroupPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.FetchByFormPermissions(System.Int64,System.Int64)">
	<summary>
 Read the data of the AdministratorGroupPermission in the table prgAdministratorGroupPermissions and return
 a list of DAClsAdministratorGroupPermissions.Struct with each one of the read registries 
 </summary>
	<param name=" pIDProfile ">IDProfile to use</param>
	<param name="pIDForm">IDFormPermissions to use</param>
	<returns>List of DAClsAdministratorGroupPermissions.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.GetParamsList(System.Int64,System.Int64,System.Int64)">
	<summary>
	</summary>
	<param name="pIDProfile"></param>
	<param name="pIDForm"></param>
	<param name="pIDGroup"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.GetParamsList(System.Int64[],System.Int64[],System.Int64[])">
	<summary>
	</summary>
	<param name="pIDProfiles"></param>
	<param name="pIDForms"></param>
	<param name="pIDGroups"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.CreateSelectSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.CreateSelectSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdministratorGroupPermissions and
 return a list of DAClsAdministratorGroupPermissions.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.RefreshStruct(SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Insert(SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Struct)">
	<summary>
 Insert a new registry in the table prgAdministratorGroupPermissions and return the number of rows affected
 </summary>
	<param name="pStruct"></param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Update(SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Struct)">
	<summary>
 Update a registry in the table prgFields and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Field to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.Delete(System.Int64,System.Int64,System.Int64)">
	<summary>
 Delete a registry in the table prgAdministratorGroupPermissions and return the number of rows affected
 </summary>
	<param name="pIDGroup">IDGroup to use</param>
	<param name="pIDProfile">IDProfile to use</param>
	<param name="pIDForm">IDForm to use</param>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.DeleteByGroup(System.Int64)">
	<summary>
 Delete a registry in the table prgAdministratorGroupPermissions and return the number of rows affected
 </summary>
	<param name=" pIDGroup ">IDGroup to use to delete</param>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.DeleteByFormPermission(System.Int64,System.Int64)">
	<summary>
 Delete a registry in the table prgAdministratorGroupPermissions and return the number of rows affected
 </summary>
	<param name="pIDProfile">IDProfile to use to delete</param>
	<param name="pIDForm"></param>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.CreateDeleteSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions.DoDelete(System.String)">
	<summary>
 Execute SQL statement to delete the data of the table tblTasksResources and return number of rows affected
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeGroupPermissions">
	<summary>
 Represents a controller of data for the prgAdministratorGroupPermissions table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgSubscriberBinnacleTables 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Fetch">
	<summary>
 Reads the data of all the SubscriberBinnacleTables in the table prgSubscriberBinnacleTables and return
 a list of DAClsSubscriberBinnacleTables.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsSubscriberBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleTable in the table prgSubscriberBinnacleTables and return
 a list of DAClsSubscriberBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain SubscriberBinnacleTable in the table prgSubscriberBinnacleTables and return
 a list of DAClsSubscriberBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain SubscriberBinnacleTable in the table prgSubscriberBinnacleTables and return
 a list of DAClsSubscriberBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.FetchByBinnacle(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain SubscriberBinnacleTable in the table prgSubscriberBinnacleTables and return
 a list of DAClsSubscriberBinnacleTables.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsSubscriberBinnacleTables.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.String},SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pTableName"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.ParameterList{System.String},SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDBinnacle"></param>
	<param name="pTableName"></param>
	<param name="pIDOperation"></param>
	<param name="pFromHour"></param>
	<param name="pToHour"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.GetFilters(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.GetFilters(System.String,System.String,System.String[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.GetFilters(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="params"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgSubscriberBinnacleTables and
 return a list of DAClsSubscriberBinnacleTables.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Insert(SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Struct)">
	<summary>
 Insert a new registry in the table prgSubscriberBinnacleTables and return ID
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacleTable to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Update(SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Struct)">
	<summary>
 Update a registry in the table prgSubscriberBinnacleTables and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the SubscriberBinnacleTable to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgSubscriberBinnacleTables.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgSubscriberBinnacleTables and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgSubscriberBinnacleTables">
	<summary>
 Represents a controller of data for the prgSubscriberBinnacleTables table in the data base PCS 
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserNotes.Struct">
	<summary>
 Represents one structures with the data of a registry of the table appAdvertiserNotes
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.Fetch">
	<summary>
 Reads the data of all the Advertiser Notes in the table appAdvertiserNotes and return
 a list of DAClsAdvertiserNotes.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserNotes.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.Fetch(System.Int64)">
	<summary>
 Read the data of a certain Advertiser Notes in the table appAdvertiserNotes and return
 a list of DAClsAdvertiserNotes.Struct with each one of the read registries 
 </summary>
	<param name="pID">ID of Advertiser Notes to fetch</param>
	<returns>List of DAClsAdvertiserNotes.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.Fetch(System.Int64,System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.Fetch(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
 Reads the data of all the AdvertiserToDo in the table appAdvertiserToDo and return
 a list of DAClsAdvertiserToDo.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdvertiserToDo.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.FetchContactNotes(System.Int64)">
	<summary>
 Read the data of the Contact Advertiser Notes in the table appAdvertiserNotes and
 return a list of DAClsAdvertiserNote.Struct with each one of the read registries 
 </summary>
	<param name="pIDContact">Contact ID of Advertiser Notes to fetch</param>
	<returns>List of DAClsAdvertiserNotes.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.GetParamsList(System.Int64,System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDContact"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.GetParamsList(System.Int64[],System.DateTime,System.DateTime)">
	<summary>
	</summary>
	<param name="pIDContacts"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParams"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table appAdvertiserNotes and
 return a list of DAClsAdvertiserNotes.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.RefreshStruct(SCT.DataAccess.DAClsappAdvertiserNotes.Struct)">
	<summary>
	</summary>
	<param name="pStruct"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.Insert(SCT.DataAccess.DAClsappAdvertiserNotes.Struct)">
	<summary>
 Insert a new registry in the table appAdvertiserNotes and return Advertiser Notes ID
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Notes to insert</param>
	<returns>Advertiser Notes ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.Update(SCT.DataAccess.DAClsappAdvertiserNotes.Struct)">
	<summary>
 Update a registry in the table appAdvertiserNotes and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the Advertiser Notes to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsappAdvertiserNotes.Delete(System.Int64)">
	<summary>
 Delete a registry in the table appAdvertiserNotes  and return the number of rows affected
 </summary>
	<param name="pID">ID of the Advertiser Notes to delete</param>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsappAdvertiserNotes">
	<summary>
 Represents a controller of data for the appAdvertiserNotes table in the data base ServerComputerTracking
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Struct">
	<summary>
 Represents one structures with the data of a registry of the table prgAdminBinnacle 
 </summary>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Fetch">
	<summary>
 Reads the data of all the AdminBinnacles in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Fetch(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Fetch(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.FetchByUser(SCT.DataAccess.Parameter{System.Int64})">
	<summary>
 Read the data of a certain AdminBinnacle in the table prgAdminBinnacle and return
 a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<returns>List of DAClsAdminBinnacles.Struct with the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.GetParametersLists(SCT.DataAccess.Parameter{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.GetParametersLists(SCT.DataAccess.ParameterList{System.Int64},SCT.DataAccess.Parameter{System.DateTime},SCT.DataAccess.Parameter{System.DateTime})">
	<summary>
	</summary>
	<param name="pIDUser"></param>
	<param name="pFromDate"></param>
	<param name="pToDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.GetParametersList(System.String,System.String,System.Int64[])">
	<summary>
	</summary>
	<param name="values"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.GetParametersList(System.String,System.String,System.DateTime)">
	<summary>
	</summary>
	<param name="value"></param>
	<param name="fieldName"></param>
	<param name="paramOperator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.SortParametersLists(System.Int32[],System.String[])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.SortParametersLists(System.Int32[],System.String[][])">
	<summary>
	</summary>
	<param name="keys"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.CreateSql(System.String[])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<param name="pParametersList"></param>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.CreateSql(System.String[][])">
	<summary>
 Creates the Sql Statement and returns it
 </summary>
	<returns>Sql Statement</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.DoFetch(System.String)">
	<summary>
 Execute SQL statement to reads the data of the table prgAdminBinnacle and
 return a list of DAClsAdminBinnacles.Struct with each one of the read registries 
 </summary>
	<param name="psql">Sql Statement to execute</param>
	<returns>List of the read registries</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Insert(SCT.DataAccess.DAClsprgAdministrativeBinnacle.Struct)">
	<summary>
 Insert a new registry in the table prgAdminBinnacle and return ID
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacle to insert</param>
	<returns>ID</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Update(SCT.DataAccess.DAClsprgAdministrativeBinnacle.Struct)">
	<summary>
 Update a registry in the table prgAdminBinnacle and return the number of rows affected
 </summary>
	<param name="pStruct">Struct with data of the AdminBinnacle to update</param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:SCT.DataAccess.DAClsprgAdministrativeBinnacle.Delete(System.Int64)">
	<summary>
 Delete a registry in the table prgAdminBinnacle and return the number of rows affected
 </summary>
	<remarks></remarks>
</member><member name="T:SCT.DataAccess.DAClsprgAdministrativeBinnacle">
	<summary>
 Represents a controller of data for the prgAdminBinnacle table in the data base PCS 
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>